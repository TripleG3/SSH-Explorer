<?xml version="1.0" encoding="utf-8" ?>
<ContentView xmlns="http://schemas.microsoft.com/dotnet/2021/maui"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             xmlns:vm="clr-namespace:SSHExplorer.ViewModels"
             xmlns:sftp="clr-namespace:Renci.SshNet.Sftp;assembly=Renci.SshNet"
             xmlns:io="clr-namespace:System.IO;assembly=System.IO.FileSystem"
             x:Class="SSHExplorer.Views.SessionView"
             x:Name="SessionRoot"
             x:DataType="vm:SessionViewModel">
    <Grid RowDefinitions="Auto,*,Auto"
          BackgroundColor="{AppThemeBinding Light={StaticResource GitHubLight_Background}, Dark={StaticResource GitHubDark_Background}}">

        <!-- Session Toolbar -->
        <Grid Grid.Row="0"
              ColumnDefinitions="*,Auto"
              Padding="8"
              BackgroundColor="{AppThemeBinding Light={StaticResource GitHubLight_Surface}, Dark={StaticResource GitHubDark_Surface}}">

            <HorizontalStackLayout Grid.Column="0"
                                   Spacing="8">
                <!-- Connection Status -->
                <Border BackgroundColor="{Binding IsConnected, Converter={StaticResource BoolToColorConverter}, ConverterParameter='Lime,Red'}"
                        StrokeShape="Ellipse"
                        WidthRequest="16"
                        HeightRequest="16"/>

                <Label Text="{Binding Session.Name}"
                       FontAttributes="Bold"
                       VerticalOptions="Center"
                       TextColor="{AppThemeBinding Light={StaticResource GitHubLight_TextPrimary}, Dark={StaticResource GitHubDark_TextPrimary}}"/>

                <Label Text="{Binding Session.Type}"
                       FontSize="Small"
                       VerticalOptions="Center"
                       TextColor="{AppThemeBinding Light={StaticResource GitHubLight_TextSecondary}, Dark={StaticResource GitHubDark_TextSecondary}}"/>
            </HorizontalStackLayout>

            <HorizontalStackLayout Grid.Column="1"
                                   Spacing="4">
                <Button Text="Connect"
                        Command="{Binding ConnectCommand}"
                        IsVisible="{Binding IsConnected, Converter={StaticResource InvertedBoolConverter}}"
                        BackgroundColor="{AppThemeBinding Light={StaticResource GitHubLight_ButtonPrimary}, Dark={StaticResource GitHubDark_ButtonPrimary}}"
                        TextColor="{AppThemeBinding Light={StaticResource GitHubLight_ButtonText}, Dark={StaticResource GitHubDark_ButtonText}}"/>

                <Button Text="Disconnect"
                        Command="{Binding DisconnectCommand}"
                        IsVisible="{Binding IsConnected}"
                        BackgroundColor="{AppThemeBinding Light={StaticResource GitHubLight_ButtonSecondary}, Dark={StaticResource GitHubDark_ButtonSecondary}}"
                        TextColor="{AppThemeBinding Light={StaticResource GitHubLight_TextPrimary}, Dark={StaticResource GitHubDark_TextPrimary}}"/>

                <Button Text="↑"
                        Command="{Binding NavigateUpCommand}"
                        IsEnabled="{Binding IsConnected}"
                        BackgroundColor="{AppThemeBinding Light={StaticResource GitHubLight_ButtonSecondary}, Dark={StaticResource GitHubDark_ButtonSecondary}}"
                        TextColor="{AppThemeBinding Light={StaticResource GitHubLight_TextPrimary}, Dark={StaticResource GitHubDark_TextPrimary}}"/>

                <Button Text="⟲"
                        Command="{Binding RefreshCommand}"
                        IsEnabled="{Binding IsConnected}"
                        BackgroundColor="{AppThemeBinding Light={StaticResource GitHubLight_ButtonSecondary}, Dark={StaticResource GitHubDark_ButtonSecondary}}"
                        TextColor="{AppThemeBinding Light={StaticResource GitHubLight_TextPrimary}, Dark={StaticResource GitHubDark_TextPrimary}}"/>
            </HorizontalStackLayout>
        </Grid>

        <!-- Main Content Area -->
        <Grid Grid.Row="1"
              ColumnDefinitions="*,*,*"
              Padding="4">

            <!-- File Explorer (Local/Remote) -->
            <Grid Grid.Column="0"
                  RowDefinitions="Auto,Auto,*"
                  BackgroundColor="{AppThemeBinding Light={StaticResource GitHubLight_Surface}, Dark={StaticResource GitHubDark_Surface}}"
                  Padding="8"
                  Margin="2">

                <Label Grid.Row="0"
                       Text="{Binding IsLocal, Converter={StaticResource BoolToStringConverter}, ConverterParameter='Local,Remote'}"
                       FontAttributes="Bold"
                       TextColor="{AppThemeBinding Light={StaticResource GitHubLight_TextPrimary}, Dark={StaticResource GitHubDark_TextPrimary}}"/>

                <Entry Grid.Row="1"
                       Text="{Binding FileExplorerState.LocalPath, Mode=OneWay}"
                       IsReadOnly="True"
                       IsVisible="{Binding IsLocal}"
                       TextColor="{AppThemeBinding Light={StaticResource GitHubLight_TextPrimary}, Dark={StaticResource GitHubDark_TextPrimary}}"
                       BackgroundColor="{AppThemeBinding Light={StaticResource GitHubLight_Background}, Dark={StaticResource GitHubDark_Background}}"/>

                <Entry Grid.Row="1"
                       Text="{Binding FileExplorerState.RemotePath, Mode=OneWay}"
                       IsReadOnly="True"
                       IsVisible="{Binding IsSsh}"
                       TextColor="{AppThemeBinding Light={StaticResource GitHubLight_TextPrimary}, Dark={StaticResource GitHubDark_TextPrimary}}"
                       BackgroundColor="{AppThemeBinding Light={StaticResource GitHubLight_Background}, Dark={StaticResource GitHubDark_Background}}"/>

                <!-- Local Files -->
                <CollectionView Grid.Row="2"
                                ItemsSource="{Binding FileExplorerState.LocalItems}"
                                IsVisible="{Binding IsLocal}"
                                BackgroundColor="{AppThemeBinding Light={StaticResource GitHubLight_Background}, Dark={StaticResource GitHubDark_Background}}">
                    <CollectionView.ItemTemplate>
                        <DataTemplate x:DataType="io:FileSystemInfo">
                            <Grid Padding="4"
                                  InputTransparent="False">
                                <Label Text="{Binding Name}"
                                       TextColor="{AppThemeBinding Light={StaticResource GitHubLight_TextPrimary}, Dark={StaticResource GitHubDark_TextPrimary}}"/>
                                <Grid.GestureRecognizers>
                                    <DragGestureRecognizer CanDrag="True"
                                                           DragStarting="OnDragStarting"/>
                                    <TapGestureRecognizer NumberOfTapsRequired="2"/>
                                    <TapGestureRecognizer Buttons="Secondary"
                                                          Tapped="OnFileContextMenu"/>
                                </Grid.GestureRecognizers>
                            </Grid>
                        </DataTemplate>
                    </CollectionView.ItemTemplate>
                </CollectionView>

                <!-- Remote Files -->
                <CollectionView Grid.Row="2"
                                ItemsSource="{Binding FileExplorerState.RemoteItems}"
                                IsVisible="{Binding IsSsh}"
                                BackgroundColor="{AppThemeBinding Light={StaticResource GitHubLight_Background}, Dark={StaticResource GitHubDark_Background}}">
                    <CollectionView.ItemTemplate>
                        <DataTemplate x:DataType="sftp:SftpFile">
                            <Grid Padding="4"
                                  InputTransparent="False">
                                <Label Text="{Binding Name}"
                                       TextColor="{AppThemeBinding Light={StaticResource GitHubLight_TextPrimary}, Dark={StaticResource GitHubDark_TextPrimary}}"/>
                                <Grid.GestureRecognizers>
                                    <DragGestureRecognizer CanDrag="True"
                                                           DragStarting="OnDragStarting"/>
                                    <TapGestureRecognizer NumberOfTapsRequired="2"/>
                                    <TapGestureRecognizer Buttons="Secondary"
                                                          Tapped="OnFileContextMenu"/>
                                </Grid.GestureRecognizers>
                            </Grid>
                        </DataTemplate>
                    </CollectionView.ItemTemplate>
                </CollectionView>

                <Grid.GestureRecognizers>
                    <DropGestureRecognizer AllowDrop="True"
                                           Drop="OnDrop"/>
                </Grid.GestureRecognizers>
            </Grid>

            <!-- Text Editor -->
            <Grid Grid.Column="1"
                  RowDefinitions="Auto,*,Auto"
                  BackgroundColor="{AppThemeBinding Light={StaticResource GitHubLight_Surface}, Dark={StaticResource GitHubDark_Surface}}"
                  Padding="8"
                  Margin="2">

                <HorizontalStackLayout Grid.Row="0"
                                       Spacing="8">
                    <Label Text="Text Editor"
                           FontAttributes="Bold"
                           VerticalOptions="Center"
                           TextColor="{AppThemeBinding Light={StaticResource GitHubLight_TextPrimary}, Dark={StaticResource GitHubDark_TextPrimary}}"/>

                    <Label Text="●"
                           IsVisible="{Binding TextEditorState.HasChanges}"
                           TextColor="Orange"
                           FontSize="Large"
                           VerticalOptions="Center"/>
                </HorizontalStackLayout>

                <ScrollView Grid.Row="1">
                    <Editor Text="{Binding TextEditorState.Content}"
                            IsReadOnly="{Binding TextEditorState.IsReadOnly}"
                            FontFamily="Consolas"
                            FontSize="14"
                            TextColor="{AppThemeBinding Light={StaticResource GitHubLight_TextPrimary}, Dark={StaticResource GitHubDark_TextPrimary}}"
                            BackgroundColor="{AppThemeBinding Light={StaticResource GitHubLight_Background}, Dark={StaticResource GitHubDark_Background}}"/>
                </ScrollView>

                <HorizontalStackLayout Grid.Row="2"
                                       Spacing="4">
                    <Button Text="Save"
                            FontSize="Small"/>
                    <Button Text="Save As"
                            FontSize="Small"/>
                    <Button Text="Close"
                            FontSize="Small"/>
                </HorizontalStackLayout>
            </Grid>

            <!-- Terminal -->
            <Grid Grid.Column="2"
                  RowDefinitions="Auto,*,Auto"
                  BackgroundColor="{AppThemeBinding Light={StaticResource GitHubLight_Terminal}, Dark={StaticResource GitHubDark_Terminal}}"
                  Padding="8"
                  Margin="2">

                <Label Grid.Row="0"
                       Text="Terminal"
                       FontAttributes="Bold"
                       TextColor="{AppThemeBinding Light={StaticResource GitHubLight_TerminalText}, Dark={StaticResource GitHubDark_TerminalText}}"/>

                <ScrollView Grid.Row="1">
                    <Label Text="{Binding TerminalState.Output}"
                           FontFamily="Consolas"
                           FontSize="12"
                           LineBreakMode="WordWrap"
                           TextColor="{AppThemeBinding Light={StaticResource GitHubLight_TerminalText}, Dark={StaticResource GitHubDark_TerminalText}}"/>
                </ScrollView>

                <Grid Grid.Row="2"
                      ColumnDefinitions="*,Auto">
                    <Entry Grid.Column="0"
                           Text="{Binding TerminalState.Input}"
                           Placeholder="Type command..."
                           FontFamily="Consolas"
                           TextColor="{AppThemeBinding Light={StaticResource GitHubLight_TerminalText}, Dark={StaticResource GitHubDark_TerminalText}}"
                           BackgroundColor="{AppThemeBinding Light={StaticResource GitHubLight_Surface}, Dark={StaticResource GitHubDark_Surface}}"/>

                    <Button Grid.Column="1"
                            Text="Run"
                            Command="{Binding ExecuteTerminalCommand}"
                            BackgroundColor="{AppThemeBinding Light={StaticResource GitHubLight_ButtonPrimary}, Dark={StaticResource GitHubDark_ButtonPrimary}}"
                            TextColor="{AppThemeBinding Light={StaticResource GitHubLight_ButtonText}, Dark={StaticResource GitHubDark_ButtonText}}"/>
                </Grid>
            </Grid>
        </Grid>

        <!-- Status Bar -->
        <Grid Grid.Row="2"
              ColumnDefinitions="*,Auto"
              Padding="8,4"
              BackgroundColor="{AppThemeBinding Light={StaticResource GitHubLight_Surface}, Dark={StaticResource GitHubDark_Surface}}">

            <HorizontalStackLayout Grid.Column="0"
                                   Spacing="16">
                <ActivityIndicator IsRunning="{Binding FileExplorerState.IsBusy}"
                                   IsVisible="{Binding FileExplorerState.IsBusy}"
                                   WidthRequest="16"
                                   HeightRequest="16"/>

                <Label Text="{Binding FileExplorerState.ErrorMessage}"
                       TextColor="Red"
                       FontSize="Small"
                       IsVisible="{Binding FileExplorerState.ErrorMessage, Converter={StaticResource StringToBoolConverter}}"/>

                <Label Text="{Binding SshState.ErrorMessage}"
                       TextColor="Red"
                       FontSize="Small"
                       IsVisible="{Binding SshState.ErrorMessage, Converter={StaticResource StringToBoolConverter}}"/>
            </HorizontalStackLayout>

            <HorizontalStackLayout Grid.Column="1"
                                   Spacing="8">
                <Label Text="{Binding Session.CurrentPath}"
                       FontSize="Small"
                       TextColor="{AppThemeBinding Light={StaticResource GitHubLight_TextSecondary}, Dark={StaticResource GitHubDark_TextSecondary}}"/>

                <Button Text="✕"
                        Command="{Binding CloseSessionCommand}"
                        FontSize="Small"
                        Padding="4"
                        BackgroundColor="Transparent"
                        TextColor="{AppThemeBinding Light={StaticResource GitHubLight_TextSecondary}, Dark={StaticResource GitHubDark_TextSecondary}}"/>
            </HorizontalStackLayout>
        </Grid>
    </Grid>
</ContentView>